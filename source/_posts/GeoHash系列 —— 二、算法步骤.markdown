---
title: "GeoHash系列 —— 二、算法步骤"
date: 2015-08-27 16:37:58 +0800
tags: 
	- Geohash
categories:
	- Geohash系列
---

系列文章

[`GeoHash`系列 —— 一、基本介绍](http://historyzhang.github.io/2015/08/26/2015-08-26-geohash-xi-lie-zhi-yi-ji-ben-jie-shao/)

[`GeoHash`系列 —— 二、算法步骤](http://historyzhang.github.io/2015/08/27/2015-08-27-geohash-xi-lie-er-suan-fa-bu-zou/)

# 上集回顾
上一篇文章我们简单了了解了一下`GeoHash`的思想，你可以通过[这个链接](http://historyzhang.github.io/2015/08/26/2015-08-26-geohash-xi-lie-zhi-yi-ji-ben-jie-shao/)来查看上一篇文章。


# 算法步骤

以下以北海公园为例介绍`GeoHash`算法的计算步骤。

{% img /images/blog/geohash_3.jpg %}

* 根据经纬度计算`GeoHash`二进制编码

地球纬度区间是`[-90,90]`， 北海公园的纬度是`39.928167`，可以通过下面算法对纬度`39.928167`进行逼近编码:

1）区间[`-90,90]`进行二分为`[-90,0)`,`[0,90]`，称为左右区间，可以确定`39.928167`属于右区间`[0,90]`，给标记为`1`；

2）接着将区间`[0,90]`进行二分为 `[0,45)`,`[45,90]`，可以确定`39.928167`属于左区间 `[0,45)`，给标记为`0`；

3）递归上述过程`39.928167`总是属于某个区间`[a,b]`。随着每次迭代区间`[a,b]`总在缩小，并越来越逼近`39.928167`；

4）如果给定的纬度`x（39.928167）`属于左区间，则记录`0`，如果属于右区间则记录`1`，这样随着算法的进行会产生一个序列`1011100`，序列的长度跟给定的区间划分次数有关。

<!--more-->
根据纬度算编码

| bit        | min           | mid  | max |
| :-------------: |:------------------:| :------------------:|:----------------:|
| 1      | -90.000 | 0.000 |90.000|
| 0      | 0.000      |   45.000 |90.000|
| 1	|0.000	|22.500	|45.000|
|1|	22.500|	33.750|	45.000|
|1	|33.7500	|39.375	|45.000|
|0	|39.375|	42.188	|45.000|
|0	|39.375|	40.7815	|42.188|
|0	|39.375|	40.07825|	40.7815|
|1	|39.375	|39.726625|	40.07825|
|1	|39.726625|	39.9024375|	40.07825|

同理，地球经度区间是`[-180,180]`，可以对经度`116.389550`进行编码。

|bit|	min	|mid	|max|
| :-------------: |:------------------:| :------------------:|:--------------:|
|1	|-180	|0.000	|180|
|1|	0.000|	90	|180|
|0	|90	|135|	180|
|1|	90|	112.5	|135|
|0	|112.5|	123.75	|135|
|0	|112.5	|118.125	|123.75|
|1	|112.5	|115.3125|	118.125|
|0	|115.3125	|116.71875	|118.125|
|1	|115.3125	|116.015625	|116.71875|
|1	|116.015625	|116.3671875	|116.71875|

* 组码

通过上述计算，纬度产生的编码为`10111 00011`，经度产生的编码为`11010 01011`。偶数位放经度，奇数位放纬度，把2串编码组合生成新串：`11100 11101 00100 01111`。

最后使用用0-9、b-z（去掉a, i, l, o）这32个字母进行base32编码，首先将`11100 11101 00100 01111`转成十进制，对应着`28、29、4、15`，十进制对应的编码就是`wx4g`。同理，将编码转换成经纬度的解码算法与之相反，具体不再赘述。

{% img /images/blog/geohash_4.jpg %}

# 编码长度与精度

下表摘自维基百科：[http://en.wikipedia.org/wiki/Geohash](http://en.wikipedia.org/wiki/Geohash)

以看出，当geohash base32编码长度为8时，精度在19米左右，而当编码长度为9时，精度在2米左右，编码长度需要根据数据情况进行选择。

{% img /images/blog/geohash_5.jpg %}

# 下集预告

本篇主要说了一下将经纬度转化为字符串编码，下一节将解释一下上述做法的原理。